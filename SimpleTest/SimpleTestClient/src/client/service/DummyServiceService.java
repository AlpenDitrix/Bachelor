package client.service;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 */
@WebServiceClient(name = "DummyServiceService", targetNamespace = "http://service/",
                  wsdlLocation = "http://127.0.0.1:8080/dummy_service?wsdl")
public class DummyServiceService extends Service {

    private final static URL                 DUMMYSERVICESERVICE_WSDL_LOCATION;
    private final static WebServiceException DUMMYSERVICESERVICE_EXCEPTION;
    private final static QName DUMMYSERVICESERVICE_QNAME = new QName("http://service/", "DummyServiceService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://127.0.0.1:8080/dummy_service?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        DUMMYSERVICESERVICE_WSDL_LOCATION = url;
        DUMMYSERVICESERVICE_EXCEPTION = e;
    }

    public DummyServiceService() {
        super(__getWsdlLocation(), DUMMYSERVICESERVICE_QNAME);
    }

    public DummyServiceService(WebServiceFeature... features) {
        super(__getWsdlLocation(), DUMMYSERVICESERVICE_QNAME, features);
    }

    public DummyServiceService(URL wsdlLocation) {
        super(wsdlLocation, DUMMYSERVICESERVICE_QNAME);
    }

    public DummyServiceService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, DUMMYSERVICESERVICE_QNAME, features);
    }

    public DummyServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DummyServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * @return returns DummyService
     */
    @WebEndpoint(name = "DummyServicePort")
    public DummyService getDummyServicePort() {
        return super.getPort(new QName("http://service/", "DummyServicePort"), DummyService.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features
     *                 not in the <code>features</code> parameter will have their default values.
     *
     * @return returns DummyService
     */
    @WebEndpoint(name = "DummyServicePort")
    public DummyService getDummyServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://service/", "DummyServicePort"), DummyService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (DUMMYSERVICESERVICE_EXCEPTION != null) {
            throw DUMMYSERVICESERVICE_EXCEPTION;
        }
        return DUMMYSERVICESERVICE_WSDL_LOCATION;
    }

}
